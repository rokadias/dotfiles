# Adding to handle when using emacs tramp mode to make it look like a bash prompt.
[[ $TERM == "dumb" ]] && unsetopt zle && PS1='$ ' && return

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="ys"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
 HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git archlinux docker emacs jira mercurial sudo terminitor npm node systemd history kubectl rust tailscale bazel)

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='emacsclient -t'
else
  export EDITOR='emacsclient -c'
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias scriptcs='mono ~/OpenSource/scriptcs/scriptcs.exe'

[ -s "/home/srokadia/.kre/kvm/kvm.sh" ] && . "/home/srokadia/.kre/kvm/kvm.sh" # Load kvm

[ -s "/home/srokadia/.dnx/dnvm/dnvm.sh" ] && . "/home/srokadia/.dnx/dnvm/dnvm.sh" # Load dnvm

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

alias dbash='docker run --rm -it --volumes-from=dotnet-data -v "$PWD":/myapp -w /myapp microsoft/dotnet /bin/bash'
alias dnet='docker run --rm --volumes-from=dotnet-data -v "$PWD":/myapp -w /myapp microsoft/dotnet dotnet'
alias dr='dnu restore'
alias db='dbuild.sh'
alias drb='dnu restore && dnu build'
alias dw='dnx web'
alias dt='dnx test'

###-begin-yo-completion-###
if type complete &>/dev/null; then
  _yo_completion () {
    local words cword
    if type _get_comp_words_by_ref &>/dev/null; then
      _get_comp_words_by_ref -n = -n @ -w words -i cword
    else
      cword="$COMP_CWORD"
      words=("${COMP_WORDS[@]}")
    fi

    local si="$IFS"
    IFS=$'\n' COMPREPLY=($(COMP_CWORD="$cword" \
                           COMP_LINE="$COMP_LINE" \
                           COMP_POINT="$COMP_POINT" \
                           yo-complete completion -- "${words[@]}" \
                           2>/dev/null)) || return $?
    IFS="$si"
  }
  complete -o default -F _yo_completion yo
fi
###-end-yo-completion-###

function source_if_available {
    local SOURCE_PATH=$1

    if [ -f $SOURCE_PATH ]; then
        source $SOURCE_PATH
    fi
}

# The next line updates PATH for the Google Cloud SDK.
source_if_available "/home/srokadia/google-cloud-sdk/path.zsh.inc"

# The next line enables shell command completion for gcloud.
source_if_available "/home/srokadia/google-cloud-sdk/completion.zsh.inc"

if [[ -x $(command -v kubectl) ]]; then
   source <(kubectl completion zsh)
fi

# Aliases
source_if_available "/home/srokadia/.aliases"
source_if_available "/home/srokadia/falkon/playground/saqib/aliases"

if [[ -x $(command -v pyenv) ]]; then
    eval "$(pyenv init --path)"
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
fi

export PATH="$HOME/.poetry/bin:$PATH"

export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
[ -s ~/.zshsecrets ] && source ~/.zshsecrets

if [[ -s /usr/share/zsh/scripts/zplug/init.zsh ]]; then
    source /usr/share/zsh/scripts/zplug/init.zsh
    zplug "code-stats/code-stats-zsh", from:gitlab, use:"codestats.plugin.zsh"

    zplug load
fi

autoload -U compinit; compinit
