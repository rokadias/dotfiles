(setq uid "srokadia")
(setq emacs-dir-root "~/.emacs.d/")
(setq elisp-root (concat emacs-dir-root uid))

(defun load-uid-library (libraries)
       (dolist (library libraries)
  (load (concat elisp-root "/" library))))

(let ((default-directory (expand-file-name "~/.emacs.d/lisp/") ))
  (normal-top-level-add-to-load-path '("."))
  (normal-top-level-add-subdirs-to-load-path))

(setq custom-file (concat elisp-root "/custom.el"))
(load custom-file 'noerror)

(load-uid-library
         '("package" "session" "generalfunctions" "theme" "global" "compile" "bindings" "find-file-in-repository"
           "key-chord" "progmodefunctions" "erc" "powershell" "yaml" "org" "restclient" "css"
           "autocomplete" "yasnippet" "csharp" "haskell" "html" "javascript" "jsx" "hg"))

;; assume files in the private directory are order-independent, and
;; load them all
(let ((private-root (concat elisp-root "/private" )))
  (when (file-exists-p private-root)
    (dolist (library (directory-files private-root nil "\\.el$"))
      (load (concat elisp-root "/private/" (file-name-sans-extension library))))))

